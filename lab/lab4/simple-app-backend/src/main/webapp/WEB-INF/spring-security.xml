<?xml version="1.0" encoding="UTF-8"?>
<!--

      Copyright 2012 Callista Enterprise AB

      This file is part of Healthcare API Tutorial

      Healthcare API Tutorial is free software; you can redistribute it and/or modify
      it under the terms of version 2.1 of the GNU Lesser General Public
      License as published by the Free Software Foundation.

      Healthcare API Tutorial is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU Lesser General Public License for more details.

      You should have received a copy of the GNU Lesser General Public
      License along with Healthcare API Tutorial; if not, write to the
      Free Software Foundation, Inc., 59 Temple Place, Suite 330,
      Boston, MA 02111-1307  USA


-->
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
                        
	<http use-expressions="true">
		<!-- Granting all anonymous web requests a particular identity and authorization-->
		<anonymous/>
		<!-- Permit all HTTP OPTIONS calls to the API, which is needed for CORS pre-flight -->
		<intercept-url pattern="/api/**" access="permitAll" method="OPTIONS"/>
		<!-- Permit all to access login page and favicon.ico since browsers asks for that file-->
		<intercept-url pattern="/login*" access="permitAll"/>
		<intercept-url pattern="/favicon.ico" access="permitAll"/>
		<!-- Secure everything else -->
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
		<!-- Permit HTTP Basic Authentication, for easy access to the API (NB! should be used along with HTTPS in production systems) -->
		<http-basic />
		<!-- Also permit form login -->
		<form-login login-page="/login" default-target-url="/" authentication-failure-url="/loginfailed" />
		<!-- Send users to the login page when access is denied -->
		<access-denied-handler error-page="/login"/>
		<!-- And use /logout to logout -->
		<logout logout-success-url="/logout" />
	</http>

	<authentication-manager>
		<authentication-provider user-service-ref="static-user-service" />
	</authentication-manager>
	
	<user-service id="static-user-service">
		<user name="kallekula" password="secret" authorities="ROLE_USER"/>
	</user-service>
	
</beans:beans>
